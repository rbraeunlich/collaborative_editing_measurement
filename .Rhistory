6^2+2
x <- 6^2+2
x^2
x<-6+2
?table
table(BikeData$employed)
install.packages ("SDSFoundations")
install.packages (SDSFoundations)
BikeData <- read.csv("~/Downloads/BikeData.csv")
View(BikeData)
BikeData
BikeData[7,]
BikeData[BikeData$gender == "F" & BikeData$cyc_freq = "Less than once a month"]
BikeData[BikeData$gender == "F" & BikeData$cyc_freq == "Less than once a month"]
BikeData[BikeData$gender == "F" & BikeData$cyc_freq == "Less than once a month",]
BikeData[BikeData$gender == "F" & BikeData$cyc_freq == "Less than once a month",][1]
BikeData[BikeData$gender == "F" & BikeData$cyc_freq == "Less than once a month",][1,]
table(BikeData$student)
student <-BikeData[BikeData$student==1,]
table(student$cyc_freq)
distance <- student$distance
distance
mean (distance)
?par
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm (y~x)
data (mtcars)
lm (mtcars$mpg ~ mtcars$weight)
mtcars
lm (mtcars$mpg ~ mtcars$wt)
?transform
library(datasets)
airquality <- transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
airquality
library(datasets)
mtcars
boxplot(mtcars$mpg ~ mtcars$cyl, mtcars, xlab = "Cylinders", ylab = "Mileage (mpg)")
setwd ("/Users/qdang/workspace/collborative_editing_measurement")
source("R_script.R")
displayDelay("res_g_del.txt",speed=1)
abline(lm(df$delay~df$user))
df1<-df[df$speed==1,]
df <- read.table ("res_g_del.txt", header = TRUE)
df$delay <- df$delay / 1000
df1 <- df [df$speed == 1,]
abline(lm(df1$delay~df1$user))
lines(df1$delay,fitted(lm(df1$delay~df1$user)))
user2 <- df1$user ^ 2
quadratic.model <- lm (df1$delay ~ df1$user + user2)
predict <- predict (quadratic.model, list (df1$user, df1$user ^ 2))
lines (df1$user, predict)
lines (df1$user, predict, col="red")
predict <- predict (quadratic.model, list (df1$user, df1$user ^ 3))
lines (df1$user, predict, col="red")
user3 <- df1$user ^ 3
quadratic.model <- lm (df1$delay ~ df1$user + user3)
predict <- predict (quadratic.model, list (df1$user, df1$user ^ 3))
lines (df1$user, predict, col="red")
abline (lm(df1$delay~poly(df1$user, 3)))
abline (lm(df1$delay~poly(df1$user, 2)))
abline (lm(df1$delay~df1$user + I(df1$user ^ 2)))
lm(df1$delay~df1$user + I(df1$user ^ 2))
fit1 <- lm(df1$delay~df1$user + I(df1$user ^ 2))
predict <- predict (fit1, list (df1$user, df1$user ^ 2))
lines (df1$user, predict, col="red")
lines (df1$user, predict, col="red")
lines (df1$user, predict, col="blue")
displayDelay("res_g_del.txt",speed=1)
lines (df1$user, predict, col="blue")
fit1 <- lm(df1$delay~df1$user + I(df1$user ^ 2) + I(df1$user^3))
predict <- predict (fit1, list (df1$user, df1$user ^ 2, df1$user ^ 3))
lines (df1$user, predict, col="blue")
lines (df1$user, predict, col="red")
fit1 <- lm(df1$delay~df1$user + I(df1$user ^ 2) + I(df1$user^3) + I(df1$user^4))
predict <- predict (fit1, list (df1$user, df1$user ^ 2, df1$user ^ 3, df1$user ^ 4))
lines (df1$user, predict, col="red")
lines (df1$user, predict, col="orange")
fit1 <- lm(df1$delay~I(df1$user ^ 2))
predict <- predict (fit1, list (df1$user ^ 2))
lines (df1$user, predict, col="orange")
predict <- predict (fit1, list (df1$user ^ 3))
fit1 <- lm(df1$delay~I(df1$user ^ 3))
predict <- predict (fit1, list (df1$user ^ 3))
lines (df1$user, predict, col="orange")
displayDelay("res_g_del.txt",speed=1)
predict <- predict (fit1, list (df1$user ^ 5))
fit1 <- lm(df1$delay~I(df1$user ^ 4))
predict <- predict (fit1, list (df1$user ^ 4))
lines (df1$user, predict, col="orange")
lines (df1$user, predict(lm(df1$delay ~ df1$user + df1$user^2), list (df1$user, df1$user ^ 2)), col="orange")
lines (df1$user, predict(lm(df1$delay ~ df1$user + df1$user^2), list (df1$user)), col="orange")
lines (df1$user, predict(lm(df1$delay ~ df1$user + df1$user^2), list (df1$user)), col="red")
means1 <- tapply (df1$delay, df1$user, mean)
means1
lines (df1$user, predict(lm(means1 ~ df1$user + df1$user^2), list (df1$user)), col="red")
users1 <- unique (df1$user)
lines (users1, predict(lm(means1 ~ users1 + users1), list (users1)), col="red")
lines (users1, predict(lm(means1 ~ users1 + users1 ^ 2), list (users1)), col="red")
displayDelay("res_g_del.txt",speed=1)
lines (users1, predict(lm(means1 ~ users1 + users1 ^ 2), list (users1)), col="red")
lines (users1, predict(lm(means1 ~ users1 + users1 ^ 2), list (users1, users1 ^ 2)), col="red")
lm (means1 ~ poly (users1, 3))
lm.s <- step (lm (means1 ~ poly (users1, 3)))
lm1 <- lm (means1 ~ poly (users1, 3))
?predict
predict (lm1)
lines (users1, predict (lm1))
lines (users1, predict (lm1),col="blue")
require("lattice")
plot (lm1)
displayDelay("res_g_del.txt",speed=1)
summary(lm1)
points(users1, predict (lm1), type="l", col="red", lwd="2")
predict (lm1)
x <- 1:50
y <- x + c(-0.5,0.5)
plot(x,y, xlim=c(0,11), ylim=c(-1,12))
x <- 1:50
y <- x + c(-0.5,0.5)
plot(x,y, xlim=c(0,51), ylim=c(-1,52))
points(users1, predict (lm1), type="l", col="red", lwd="2")
c <- predict (lm1)
c
c[1]
c[,]
c[1][1]
class (c[1])
class (c[2])
c[]2
c[2]
c[12]
c[22]
c[32]
class (c)
c[32][2]
c[32][1]
c[32] * 2
points (users1, c)
displayDelay("res_g_del.txt",speed=1)
points (users1, c)
boxplot (df1$delay ~ df1$user)
points (users1, c)
lm1
predict(lm1, users1)
lm1<-lm(means1~ploy(users1, 2))
lm1<-lm(means1~poly(users1, 2))
predict (lm1)
boxplot (df1$delay ~ df1$user, las=2)
predict (lm1,ylim=0:50)
plot (lm1, ylim=0:50)
points (users1, predict (lm1), ylim=0:50)
points (users1, predict (lm1), ylim=0:50, col="red")
us
u1 <- df1$user
s1 <- df1$speed
us1 < paste(formatC( u1 , width = 2, format = "d", flag = "0") , '.' , formatC( s1 , width = 2, format = "d", flag = "0" ), space='')
us1 <- paste(formatC( u1 , width = 2, format = "d", flag = "0") , '.' , formatC( s1 , width = 2, format = "d", flag = "0" ), space='')
plot (us1, predict (lm1))
length(predict(lm1))
length (us1)
unique (us1)
length (unique (us1))
plot (unique(us1), predict (lm1))
plot (unique(us1), predict (lm1),xlim=0:50)
plot (unique(us1), predict (lm1),xlim=c(0,50))
plot (unique(u1), predict (lm1),xlim=c(0,50))
boxplot (means ~ u1)
boxplot (means1 ~ u1)
boxplot (means1 ~ unique(u1))
plot (unique(u1), predict (lm1),xlim=c(0,50))
plot (unique(u1), predict (lm1),xlim=c(0,50))
boxplot (means1 ~ unique(u1))
plot (means1 ~ unique(u1))
plot (unique(u1), predict (lm1),xlim=c(0,50))
plot (means1 ~ unique(u1))
lines (unique(u1), predict (lm1), col="red")
plot (df1$delay ~ unique(u1))
plot (df1$delay ~ u1)
lines (unique(u1), predict (lm1), col="red")
boxplot (df1$delay ~ u1)
lines (unique(u1), predict (lm1), col="red")
plot (df1$delay ~ u1)
lm1 <- lm (df1$delay <- poly (users1, 3))
lm1<-lm(means1~poly(users1, 3))
lines (unique(u1), predict (lm1), col="red")
plot (df1$delay ~ u1,ylab="Delay in seconds", xlab="Typing speed", title="Google Docs performance with 1 user")
plot (df1$delay ~ u1,ylab="Delay in seconds", xlab="Typing speed", main="Google Docs performance with 1 user")
lines (unique(u1), predict (lm1), col="red")
lm1
df2 <- df [df$speed==2,]
user2 <- df2$user
source ("R_script.R")
source ("R_script.R")
try_regression ("res_g_del.txt",speed=1)
source ("R_script.R")
try_regression ("res_g_del.txt",speed=1)
users1
try_regression ("res_g_del.txt",speed=1)
source ("R_script.R")
try_regression ("res_g_del.txt",speed=1)
source ("R_script.R")
try_regression ("res_g_del.txt",speed=1)
try_regression ("res_g_del.txt",speed=1)
setwd ("/Users/qdang/workspace/collborative_editing_measurement")
df <- read.table (file_name, header = TRUE)
df$delay <- df$delay / 1000
df <- df [df$speed == speed,]
means <- tapply (df$delay, df$user, mean)
unique(df$user)
lm <- lm (means ~ poly (unique(df$users), 3))
plot (df$delay ~ df$user,ylab="Delay in seconds", xlab="Number of user", main=paste("Google Docs performance with typing speed = ", speed))
lines (unique (df$user), predict (lm), col="red")
lm
setwd ("/Users/qdang/workspace/collborative_editing_measurement")
df <- read.table ("res_g_del.txt", header = TRUE)
df$delay <- df$delay / 1000
df <- df [df$speed == speed,]
means <- tapply (df$delay, df$user, mean)
setwd ("/Users/qdang/workspace/collborative_editing_measurement")
df <- read.table ("res_g_del.txt", header = TRUE)
df$delay <- df$delay / 1000
df <- df [df$speed == 1,]
means <- tapply (df$delay, df$user, mean)
means
lm <- lm (means ~ poly (unique(df$users), 3))
lm <- lm (df$delay ~ poly (unique(df$users), 3))
unique(df$users)
source("R_script.R")
try_regression ("res_g_del.txt",speed=1)
try_regression ("res_g_del.txt",speed=2)
source("R_script.R")
try_regression ("res_g_del.txt",speed=1)
try_regression ("res_g_del.txt",speed=2)
source("R_script.R")
try_regression ("res_g_del.txt",speed=1)
source("R_script.R")
try_regression ("res_g_del.txt",speed=1)
source("R_script.R")
try_regression ("res_g_del.txt",speed=1)
try_regression ("res_g_del.txt",speed=2)
source("R_script.R")
try_regression ("res_g_del.txt",speed=2)
try_regression ("res_g_del.txt",speed=4)
try_regression ("res_g_del.txt",speed=6)
try_regression ("res_g_del.txt",speed=8)
try_regression ("res_g_del.txt",speed=10)
